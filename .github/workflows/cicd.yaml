name: server-cicd

run-name: ${{ github.triggering_actor }} runs ${{ github.workflow }}

on:
  push:
    branches:
      - master

jobs:
  push-container-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Write prod env file
        run: |
          echo "APP_ENV=prod" >> config/prod.env
          echo "CONFIG_FILE_PATH=./config/config.json" >> config/prod.env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> config/prod.env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> config/prod.env
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Load Tags
        run: |
          git fetch --tags
      - name: Get image version
        id: image-version
        run: |
          echo "version=$(git describe --tags --abbrev=0 | sed 's/^v//' 2> /dev/null || echo 'untagged')" >> $GITHUB_OUTPUT
      - name: Get project metadata
        id: metadata
        run: |
          echo "version=$(git describe --tags --abbrev=0 || echo 'untagged')" >> $GITHUB_OUTPUT
          echo "commit=$(git rev-parse --short=16 HEAD)" >> $GITHUB_OUTPUT
          echo "build_date=$(date -I)" >> $GITHUB_OUTPUT
      - name: Login to Github container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: |
            BUILD_FLAGS=-X main.VERSION=${{ steps.metadata.outputs.version }} -X main.COMMIT=${{ steps.metadata.outputs.commit }} -X main.BUILD_DATE=${{ steps.metadata.outputs.build_date }}
          tags: |
            ghcr.io/leebee-dev/fluxidea:${{ steps.image-version.outputs.version }}
            ghcr.io/leebee-dev/fluxidea:latest
          platforms: |
            linux/amd64
            linux/arm64
  deploy-render:
    runs-on: ubuntu-latest
    needs: push-container-image
    steps:
      - name: Deploy to Render
        env:
          DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          IMAGE_URL: ghcr.io/leebee-dev/fluxidea:latest
        run: |
          ENCODED_IMAGE_URL=$(python3 -c "import urllib.parse,os; print(urllib.parse.quote(os.environ['IMAGE_URL'], safe=''))")
          curl --fail "${DEPLOY_HOOK_URL}&imgURL=${ENCODED_IMAGE_URL}"
